[a2billing-predictivedialer1]
exten => _X.,1,Set(Strheader=${SIP_HEADER(TO):5})
same => n,Set(dst=${CUT(Strheader,@,1)})
same => n,Set(strusername=0)
same => n,Set(ARRAY(strid,strusername,strcredit,strtariff,strinuse,strlastuse,strnbused,strXXX)=${BILLING_CUSTINFO(${CDR(accountcode)})})
same => n,NoOp(Account CODE ${strusername})
same => n,NoOp(Account Balance is ${StrXXX})
same => n,GotoIf($[${strusername}=${CDR(accountcode)}]?gooduser:totalhangup) ;;; Username Match escape
same => n,ExceIf($["${StrXXX}" > "0"]?gooduser)
same => n(gooduser),NoOp(goodUSERHERE)
same => n,Set(ARRAY(str_id,str_dialprefix,str_buyrate,str_rateinitial,str_initblock,str_id_trunk,str_idtariffplan,str_ratecard_id,str_tariffgroup_id)=${BILLING_GETRATECARD(${dst},${strtariff})})
same => n,GotoIf($["${str_id}" = "0"]?totalhangup) ;Ratecard found or goto hangup
same => n,Set(ARRAY(str__id,str__idtariffplan,str__dialprefix,str__buyrate,str__buyrateinitblock,str__buyrateincrement,str__rateinitial,str__initblock,str__billingblock,str__id_trunk,str__destination)= ${BILLING_RATEDEST(${str_id})})
same => n,GotoIf($["${str__id_trunk}" = "0"]?totalhangup) ;Rate Card Destiname escape
same => n,Set(ARRAY(trunk_id_trunk,trunk_trunkprefix,trunk_providertech,trunk_providerip,trunk_removeprefix,trunk_failover_trunk)=${BILLING_TRUNKINFO(${str_id_trunk})})
same => n,GotoIf($["${fetchid}"="0"]?totalhangup) ; third escape
same => n,Set(CALL_ATTEMPT=1)
;Update account to +1 use
same => n,Set(BILLING_INUSEUPDATE()=${strusername})
same => n,set(str_maxcall=${MATH(${strXXX}/${str_rateinitial})})
same => n,Set(accountnumber=${strusername})
same => n,Set(EXTEN1=${dst})
same => n,Set(callrate=${str_rateinitial})
same => n,GotoIf($[${ISNULL(${trunk_removeprefix})}]?prefixremoved)    
same => n,Set(len_trunk_pref_remove=${LEN(${trunk_removeprefix})})
same => n,GotoIf($["${dst:0:${len_trunk_pref_remove}}" = "${trunk_removeprefix}"]?prefixtoremoved:prefixremoved)
same => n(prefixtoremoved),Set(EXTEN1=${dst:${len_trunk_pref_remove}:${LEN(${dst})}})
same => n(prefixremoved),Dial(${trunk_providertech}/${trunk_trunkprefix}${EXTEN1}@${trunk_providerip},60,iL(${MATH(${strXXX}*600000)}:61000:30000))
same => n,Noop(${DIALSTATUS})
same => n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?anotheratempt)         ;Try one more time or with other provider, when you get CONGESTION or CHANUNAVAIL
same => n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?anotheratempt)
same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?failoverbusy)
same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?totalhangup)
same => n(anotheratempt),Set(CALL_ATTEMPT=$[${CALL_ATTEMPT} + 1])
same => n,GotoIf($["${CALL_ATTEMPT}" > "4"]?totalhangup)
;Get Failover Trunk
same => n(getfailover),Set(ARRAY(trunk_id_trunk,trunk_trunkprefix,trunk_providertech,trunk_providerip,trunk_removeprefix,trunk_failover_trunk)=${BILLING_FAILTRUNKINFO(${trunk_failover_trunk})})

same => n,GotoIf($["${trunk_failover_trunk}" = "0"]?totalhangup) ; third escape
same => n,GotoIf($["${trunk_providertech}" = ""]?totalhangup)    ; If no Trunk Tech Found Hangup the call
same => n,GotoIf($[${ISNULL(${trunk_removeprefix})}]?prefixremoved)
same => n,Set(len_trunk_pref_remove=${LEN(${trunk_removeprefix})})
same => n,GotoIf($["${dst:0:${len_trunk_pref_remove}}" = "${trunk_removeprefix}"]?prefixtoremoved1:prefixremoved1)
same => n(prefixtoremoved1),Set(EXTEN1=${dst:${len_trunk_pref_remove}:${LEN(${dst})}})
same => n(prefixremoved1),Dial(${trunk_providertech}/${trunk_trunkprefix}${EXTEN1}@${trunk_providerip},60,iL(${MATH(${strXXX}*600000)}:61000:30000))

same => n,Noop(${DIALSTATUS})
same => n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?anotheratempt)
same => n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?anotheratempt)
same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?failoverbusy)
same => n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?totalhangup)
same => n(totalhangup),Hangup()
same => n(failoverbusy),Hangup(getfailover)

;Hangup the call
exten => h,1,GotoIf($[${strusername}=${CDR(accountcode)}]?h,oktolog:kickoff)   ; 2 for OK 31 for Fuck off
same => n(oktolog),Set(StrSessiontime=${CDR(billsec)})
same => n,Set(StrCalledstation=${dst})
same => n,Set(StrDialstatus=${DIALSTATUS})
same => n,Set(StrDialstatus_value=9)
same => n,Set(sellcost=0)
same => n,Set(buycost=0)
same => n,Set(StrChannel=${CDR(channel)})
same => n,GotoIf($["${StrSessiontime}" = "0"]?h,setsellcost:calcsellcost)
same => n(calcsellcost),ExecIf($[${StrSessiontime}>${str__initblock}] ?set(sellcost=$[CEIL(${StrSessiontime}/${str__billingblock})*${str__billingblock}/60*${str__rateinitial}]))
same => n,ExecIf($[${StrSessiontime}<=${str__initblock}] ?set(sellcost=$[${str__initblock}/60*${str__rateinitial}]))
same => n(setsellcost),set(sellcost_all=${sellcost})
same => n,GotoIf($["${StrSessiontime}" = "0"]?h,setbuycost:calcbuycost)
same => n(calcbuycost),ExecIf($[${StrSessiontime}>${str__buyrateinitblock}] ?set(buycost=$[CEIL(${StrSessiontime}/${str__buyrateincrement})*${str__buyrateincrement}/60*${str__buyrate}]))
same => n,ExecIf($[${StrSessiontime}<=${str__buyrateinitblock}] ?set(buycost=$[${str__buyrateinitblock}/60*${str__buyrate}]))
same => n(setbuycost),set(buycost_all=${buycost})
same => n,ExecIf($[ "${StrDialstatus}" = "CHANUNAVAIL" ] ?Set(StrDialstatus_value=6))
same => n,ExecIf($[ "${StrDialstatus}" = "CANCEL" ] ?Set(StrDialstatus_value=4))
same => n,ExecIf($[ "${StrDialstatus}" = "BUSY" ] ?Set(StrDialstatus_value=2))
same => n,ExecIf($[ "${StrDialstatus}" = "CONGESTION" ] ?Set(StrDialstatus_value=5))
same => n,ExecIf($[ "${StrDialstatus}" = "ANSWER" ] ?Set(StrDialstatus_value=1))
same => n,ExecIf($[ "${StrDialstatus}" = "NOANSWER" ] ?Set(StrDialstatus_value=3))
same => n,ExecIf($[ "${StrDialstatus}" = "" ] ?Set(StrDialstatus_value=6))
same => n,Set(BILLING_CDRUPDATE()= ${CDR(uniqueid)},${CDR(channel)},${strid},${StrSessiontime},${StrCalledstation},${StrDialstatus_value},${sellcost_all},${str_tariffgroup_id},${str_idtariffplan},${str_ratecard_id},${trunk_id_trunk},${CALLERID(num)},${buycost_all},${CDR(dnid)},${str_dialprefix})
same => n,Set(BILLING_LASTUPDATE()=${StrSessiontime},${trunk_id_trunk})
same => n,Set(BILLING_LASTUPDATE1()=${StrSessiontime},${str__idtariffplan})
same => n,Set(BILLING_LASTUPDATE2()=${strusername})
same => n,Set(BILLING_LASTUPDATE3()=${strusername},${sellcost_all})
same => n,NOOP(sellcost=${sellcost},buycost=${buycost})
same => n,NOOP(finished)
same => n(kickoff),NoOp(Hangup the call)

